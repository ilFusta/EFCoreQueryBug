// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using EFCoreQueryBug;

#nullable disable

namespace EFCoreQueryBug.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QueryBug.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contact");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Contact 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Contact 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Contact 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Contact 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Contact 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Contact 6"
                        });
                });

            modelBuilder.Entity("QueryBug.Models.Statement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Statements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactId = 1,
                            Name = "Statement 1",
                            TransactionId = 1,
                            Type = "Client"
                        },
                        new
                        {
                            Id = 2,
                            ContactId = 3,
                            Name = "Statement 2",
                            TransactionId = 1,
                            Type = "Model"
                        },
                        new
                        {
                            Id = 3,
                            ContactId = 5,
                            Name = "Statement 3",
                            TransactionId = 1,
                            Type = "Agency"
                        },
                        new
                        {
                            Id = 4,
                            ContactId = 1,
                            Name = "Statement 4",
                            TransactionId = 2,
                            Type = "Client"
                        },
                        new
                        {
                            Id = 5,
                            ContactId = 4,
                            Name = "Statement 5",
                            TransactionId = 2,
                            Type = "Model"
                        },
                        new
                        {
                            Id = 6,
                            ContactId = 6,
                            Name = "Statement 6",
                            TransactionId = 2,
                            Type = "Agency"
                        },
                        new
                        {
                            Id = 7,
                            ContactId = 2,
                            Name = "Statement 7",
                            TransactionId = 3,
                            Type = "Client"
                        },
                        new
                        {
                            Id = 8,
                            ContactId = 3,
                            Name = "Statement 8",
                            TransactionId = 3,
                            Type = "Model"
                        },
                        new
                        {
                            Id = 9,
                            ContactId = 6,
                            Name = "Statement 9",
                            TransactionId = 3,
                            Type = "Agency"
                        },
                        new
                        {
                            Id = 10,
                            ContactId = 2,
                            Name = "Statement 1",
                            TransactionId = 4,
                            Type = "Client"
                        },
                        new
                        {
                            Id = 11,
                            ContactId = 4,
                            Name = "Statement 2",
                            TransactionId = 4,
                            Type = "Model"
                        });
                });

            modelBuilder.Entity("QueryBug.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Transaction 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Transaction 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Transaction 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Transaction 4"
                        });
                });

            modelBuilder.Entity("QueryBug.Models.Statement", b =>
                {
                    b.HasOne("QueryBug.Models.Contact", "Contact")
                        .WithMany("Statements")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueryBug.Models.Transaction", "Tramsaction")
                        .WithMany("Statements")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Tramsaction");
                });

            modelBuilder.Entity("QueryBug.Models.Contact", b =>
                {
                    b.Navigation("Statements");
                });

            modelBuilder.Entity("QueryBug.Models.Transaction", b =>
                {
                    b.Navigation("Statements");
                });
#pragma warning restore 612, 618
        }
    }
}
